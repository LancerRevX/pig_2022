/* tslint:disable */
/* eslint-disable */
/**
 * Snippets API
 * Test description
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Case
 */
export interface Case {
    /**
     * 
     * @type {number}
     * @memberof Case
     */
    readonly id?: number;
    /**
     * 
     * @type {number}
     * @memberof Case
     */
    patient: number;
    /**
     * 
     * @type {number}
     * @memberof Case
     */
    doctor: number;
    /**
     * 
     * @type {number}
     * @memberof Case
     */
    ward?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof Case
     */
    startDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof Case
     */
    endDate?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof Case
     */
    active?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Case
     */
    description: string;
}

/**
 * Check if a given object implements the Case interface.
 */
export function instanceOfCase(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "patient" in value;
    isInstance = isInstance && "doctor" in value;
    isInstance = isInstance && "startDate" in value;
    isInstance = isInstance && "description" in value;

    return isInstance;
}

export function CaseFromJSON(json: any): Case {
    return CaseFromJSONTyped(json, false);
}

export function CaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Case {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'patient': json['patient'],
        'doctor': json['doctor'],
        'ward': !exists(json, 'ward') ? undefined : json['ward'],
        'startDate': (new Date(json['start_date'])),
        'endDate': !exists(json, 'end_date') ? undefined : (json['end_date'] === null ? null : new Date(json['end_date'])),
        'active': !exists(json, 'active') ? undefined : json['active'],
        'description': json['description'],
    };
}

export function CaseToJSON(value?: Case | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'patient': value.patient,
        'doctor': value.doctor,
        'ward': value.ward,
        'start_date': (value.startDate.toISOString().substr(0,10)),
        'end_date': value.endDate === undefined ? undefined : (value.endDate === null ? null : value.endDate.toISOString().substr(0,10)),
        'active': value.active,
        'description': value.description,
    };
}

