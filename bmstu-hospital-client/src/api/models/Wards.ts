/* tslint:disable */
/* eslint-disable */
/**
 * Snippets API
 * Test description
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Wards
 */
export interface Wards {
    /**
     * 
     * @type {number}
     * @memberof Wards
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof Wards
     */
    readonly url?: string;
    /**
     * 
     * @type {number}
     * @memberof Wards
     */
    number: number;
    /**
     * 
     * @type {number}
     * @memberof Wards
     */
    capacity: number;
    /**
     * 
     * @type {Set<string>}
     * @memberof Wards
     */
    readonly patients?: Set<string>;
}

/**
 * Check if a given object implements the Wards interface.
 */
export function instanceOfWards(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "number" in value;
    isInstance = isInstance && "capacity" in value;

    return isInstance;
}

export function WardsFromJSON(json: any): Wards {
    return WardsFromJSONTyped(json, false);
}

export function WardsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Wards {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'number': json['number'],
        'capacity': json['capacity'],
        'patients': !exists(json, 'patients') ? undefined : json['patients'],
    };
}

export function WardsToJSON(value?: Wards | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'number': value.number,
        'capacity': value.capacity,
    };
}

