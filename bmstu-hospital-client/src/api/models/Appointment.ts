/* tslint:disable */
/* eslint-disable */
/**
 * Snippets API
 * Test description
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Appointment
 */
export interface Appointment {
    /**
     * 
     * @type {number}
     * @memberof Appointment
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof Appointment
     */
    readonly url?: string;
    /**
     * 
     * @type {number}
     * @memberof Appointment
     */
    readonly patient?: number;
    /**
     * 
     * @type {number}
     * @memberof Appointment
     */
    doctor: number;
    /**
     * 
     * @type {Date}
     * @memberof Appointment
     */
    datetime: Date;
}

/**
 * Check if a given object implements the Appointment interface.
 */
export function instanceOfAppointment(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "doctor" in value;
    isInstance = isInstance && "datetime" in value;

    return isInstance;
}

export function AppointmentFromJSON(json: any): Appointment {
    return AppointmentFromJSONTyped(json, false);
}

export function AppointmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Appointment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'patient': !exists(json, 'patient') ? undefined : json['patient'],
        'doctor': json['doctor'],
        'datetime': (new Date(json['datetime'])),
    };
}

export function AppointmentToJSON(value?: Appointment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'doctor': value.doctor,
        'datetime': (value.datetime.toISOString()),
    };
}

